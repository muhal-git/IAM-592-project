import math_tools
import secrets #for generating cryptographically! secure random integers
import random  #for generating random numbers(not cryptographically secure)
import time
'''
k=9
i=0
while True:
	if k<=10:
		#print("number generated.")
		p=math_tools.secrets.randbits(2048)
		if(p%2==0):
			p=p+1
		i+=1
		if math_tools.isPrime(p,10):
			print("found at ",i,"th try",k,"th prime:",p)
			k=k+1
			if k==11:
				break
p=14194566928418759971198215951098227924202017498224062044686920071500957202511767301874174526104460595983201116252197979672346207111220003224771071944427678416224717357923817924822014071787812211860319531535947602490283301395826650602759535827370711883614770738443260298221100705429372464848917655701874154408430691653200824290594057237828314343384420094201878696196819819089141949794664478347652336609092133538340759769863348839231490082778051708917433932691706375280956488413000605829141280230947735539419391744384279654295169719462211533567593938860078131879385338181674716423727286216313724760837902854371253431253
q=26634987900115889881375968550127569437156981416568358170483343820583411042037260342093781392870757372015081228294496589502502805413397836570823145730098102826642790174163163836240866033187826914962180887977201455223037519890751672963875906502455456998789504452109828404044795622131270120605864611523775891579215222555179876182994242342894612610869174019804843483120033594803803039783676672241318484591397551055828196895080431834174424435289391583379217143226666311311303596103966064264262604966374982736253197249143045085200052115020267410121505682926672763652775716830321162410201623188673023728237265424968338738547

N=p*q
phi_n=(p-1)*(q-1)
e=2**16+1
d=math_tools.inverse_mod(e,phi_n)
print(e*d%(phi_n))
'''

def generate_primes(length):

    while True:
        prime_candidate = secrets.randbits(length)
        if(prime_candidate%2==0):
            prime_candidate+=1
        if math_tools.isPrime(prime_candidate):
            p = prime_candidate
            break

    while True:
        prime_candidate = secrets.randbits(length)
        if(prime_candidate%2==0):
            prime_candidate+=1
        if math_tools.isPrime(prime_candidate) and prime_candidate!=p:
            q = prime_candidate
            break
    return p, q
